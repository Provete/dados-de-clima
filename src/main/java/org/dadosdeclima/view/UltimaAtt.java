/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package org.dadosdeclima.view;

import org.dadosdeclima.model.DadoClimatico;
import org.dadosdeclima.observable.Observer;
import org.dadosdeclima.presenter.DadosPresenter;

import java.time.format.DateTimeFormatter;

/**
 *
 * @author Ruan Ribeiro
 */
public class UltimaAtt extends javax.swing.JInternalFrame implements Observer
{
    DadosPresenter presenter;
    /**
     * Creates new form UltimaAtt
     */
    public UltimaAtt(DadosPresenter presenter) {
        this.presenter = presenter;
        initComponents();
        setVisible(true);
    }

    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ultTemp = new javax.swing.JLabel();
        ultUmi = new javax.swing.JLabel();
        ultPress = new javax.swing.JLabel();
        ultDat = new javax.swing.JLabel();
        UltTemperatura = new javax.swing.JLabel();
        UltUmidade = new javax.swing.JLabel();
        UltPressao = new javax.swing.JLabel();
        UltData = new javax.swing.JLabel();

        setTitle("Ultima Atualização do Tempo");

        ultTemp.setText("Temperatura");

        ultUmi.setText("Umidade");

        ultPress.setText("Pressão");

        ultDat.setText("Data");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ultUmi)
                    .addComponent(ultPress)
                    .addComponent(ultDat)
                    .addComponent(ultTemp))
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(UltTemperatura, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(UltUmidade, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(UltPressao, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(UltData, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE))
                .addContainerGap(40, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ultTemp)
                    .addComponent(UltTemperatura))
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ultUmi)
                    .addComponent(UltUmidade))
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ultPress)
                    .addComponent(UltPressao))
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ultDat)
                    .addComponent(UltData))
                .addContainerGap(23, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel UltData;
    private javax.swing.JLabel UltPressao;
    private javax.swing.JLabel UltTemperatura;
    private javax.swing.JLabel UltUmidade;
    private javax.swing.JLabel ultDat;
    private javax.swing.JLabel ultPress;
    private javax.swing.JLabel ultTemp;
    private javax.swing.JLabel ultUmi;

    @Override
    public void update(DadoClimatico event)
    {
        DateTimeFormatter formatadorData = DateTimeFormatter.ofPattern("dd/MM/yyyy");

        if(!event.equals( presenter.ultimo() ))
        {
            UltData.setText(String.valueOf(presenter.ultimo().getData().format(formatadorData)));
            UltPressao.setText(String.valueOf(presenter.ultimo().getPressaoPascal()));
            UltTemperatura.setText(String.valueOf(presenter.ultimo().getTemperaturaCelsius()));
            UltUmidade.setText(String.valueOf(presenter.ultimo().getUmidadePorcentagem()));
            return;
        }



        UltData.setText(String.valueOf(event.getData().format(formatadorData)));
        UltPressao.setText(String.valueOf(event.getPressaoPascal()));
        UltTemperatura.setText(String.valueOf(event.getTemperaturaCelsius()));
        UltUmidade.setText(String.valueOf(event.getUmidadePorcentagem()));
    }
    // End of variables declaration//GEN-END:variables
}
